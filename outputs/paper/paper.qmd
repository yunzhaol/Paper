---
title: "Toronto death registry"
author: Yunzhao Li
thanks: "Code and data are available at: [LINK](https://github.com/yunzhaol/Paper.git)."
date: 22 January 2024
abstract: "In Toronto, there are many people died each year. The data of death registry supports the City's operational requirements and business functions. In this project we will make a table of number of death in Toronto for each month in 2023. By analyzing this, we can find months with high number of death and make conjectures with factors like weather, poicies or incidents of that particular month."
format: pdf
bibliography: references.bib
---

```{r}
#| echo: false
#| warning: false
install.packages("tidyverse")
install.packages("janitor")
install.packages("opendatatoronto")
install.packages("lubridate")
install.packages("knitr")
```

```{r}
#| echo: false
#| include: true
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(opendatatoronto)
library(lubridate)
library(knitr)
```

```{r}
#| echo: false
#| include: true
#| warning: false
#| message: false
#### Acquire ####
#raw_death_registry <-
#  read_csv(
#    file =
#      "Death Registry Statistics Data.csv",
#    show_col_types = FALSE
#)

raw_death_registry <-
  # Each package is associated with a unique id  found in the "For 
  # Developers" tab of the relevant page from Open Data Toronto
  # https://open.toronto.ca/dataset/daily-shelter-overnight-service-occupancy-capacity/
  list_package_resources("cba07a90-984b-42d2-9131-701c8c2a9788") |>
  # Within that package, we are interested in the 2021 dataset
  filter(name == 
    "Death Registry Statistics Data.csv") |>
  get_resource()

write_csv(
  x = raw_death_registry,
  file = "raw_death_registry.csv"
)

head(raw_death_registry)
```

```{r}
#| echo: false
#| warning: false
#### Clean ####
cleaned_death_registry <-
  clean_names(raw_death_registry) |>
  mutate(time_period = ym(time_period)) |> 
  filter(
    place_of_death == "Toronto",
    time_period %in% c("2023-01-01","2023-02-01","2023-03-01","2023-04-01","2023-05-01","2023-06-01","2023-07-01","2023-08-01","2023-09-01","2023-10-01","2023-11-01","2023-12-01")
    ) |>
  select(time_period, death_licenses)

head(cleaned_death_registry)
```

```{r}
#| echo: false
#| warning: false
write_csv(
  x = cleaned_death_registry,
  file = "cleaned_death_registry.csv"
)
```


```{r}
#| echo: false
#| warning: false
#### Explore ####
cleaned_death_registry <-
  read_csv(
    "cleaned_death_registry.csv",
    show_col_types = FALSE
  )
```

@tbl-deathregistrytable
```{r}
#| echo: false
#| warning: false
#| label: tbl-deathregistrytable
#| tbl-cap: "Number of death in Toronto for each month in 2023"
cleaned_death_registry |>
  mutate(time_period_month = month(
    time_period,
    label = TRUE,
    abbr = FALSE
  )) |>
  arrange(time_period_month) |> 
  drop_na(death_licenses) |>
  summarise(death_licenses = sum(death_licenses),
            .by = time_period_month) |>
  kable(
    col.names = c("Month", "Number of death")
  )

```





# Introduction

You can and should cross-reference sections and sub-sections. 

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-bills
#| fig-cap: Bills of penguins
#| echo: false

# ggplot(penguins, aes(x = island, fill = species)) +
#   geom_bar(alpha = 0.8) +
#   scale_fill_manual(values = c("darkorange","purple","cyan4"),
#                     guide = "none") +
#   theme_minimal() +
#   facet_wrap(~species, ncol = 1) +
#   coord_flip()
```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

# analysis_data <- read_csv(here::here("outputs/data/analysis_data.csv"))
# 
# analysis_data |> 
#   ggplot(aes(x = width, y = length)) +
#   geom_point(alpha = 0.8) +
#   theme_minimal() +
#   labs(x = "Wing width (mm)",
#        y = "Wing length (mm)")
```

Talk way more about it. 



# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

# pp_check(first_model) +
#   theme_classic() +
#   theme(legend.position = "bottom")
# 
# posterior_vs_prior(first_model) +
#   theme_minimal() +
#   scale_color_brewer(palette = "Set1") +
#   theme(legend.position = "bottom") +
#   coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

# plot(first_model, "trace")
# 
# plot(first_model, "rhat")
```



\newpage


# References
@citeR
@tellingstories
@citeopendatatoronto
@citetidyverse
@citeR-knitr
@citelubridate
@citejanitor
