---
title: "Toronto Death Registry"
author: Yunzhao Li
thanks: "Code and data are available at: [https://github.com/yunzhaol/Toronto_Death_Registry.git](https://github.com/yunzhaol/Toronto_Death_Registry.git)."
date: 22 January 2024
abstract: "In Toronto, there are many people died each year. The data of death registry supports the City's operational requirements and business functions. In this project we will make a table of number of death in Toronto for each month in 2023. By analyzing this, we can find months with high number of death and make conjectures with factors like weather, poicies or incidents of that particular month."
format: pdf
number-sections: true
toc: true
bibliography: references.bib
---


```{r}
#| echo: false
#| warning: false
#| message: false

#### Workspace set-up ####
library(tidyverse)
library(janitor)
library(opendatatoronto)
library(lubridate)
library(knitr)
library(lintr)
library(renv)
library(styler)
```


# Introduction

Death is a topic that people are not often willing to talk about, but it is closely related to the City's operational requirements, business functions as well as social resource allocation, so it is necessary to understand the data of death registration and do some basic statistical analysis of it. 

The data source in this study was obtained by opendatatoronto, from which the data of the Toronto area in 2023 were selected for research and analysis. We expect to produce a table reflecting the number of deaths registered in the Toronto area in each month of 2023, and correlate the data with related factors.

These speculation may help in the formulation of future policies, such as whether the death toll is higher in the colder months, then the government can increase investment in the construction of shelters, if it is because of the epidemic or epidemic in certain months, then it can be prevented according to the relevant month and transmission trend, formulate a mask-related policy or appropriately restrict travel, or because of some large-scale accident that caused a large number of new deaths. Which months have a low number of deaths can also be related to the input of some public resources, the increase in per capita income, and the improvement of social welfare, which in turn can be used to judge whether these policies and improvements are significant, whether people's quality of life and income are stable, and whether social security is good. The government can regulate these factors to reduce the number of deaths caused by non-aging, which is the long-term significance of this study. 

This study will end with these numbers documenting the lives that have accompanied the city and telling their stories implicitly to some extent.

The remainder of this paper is structured as follows. 
@sec-Data,
@sec-Result,
@sec-Conclusion,
@sec-Appendix


# Data

This dataset includes information relating to the registration of deaths documented by Registry Services staff located in four of the civic centres (Scarborough, North York, Toronto and Etobicoke). Registration of death data is entered into the Registry Services Tracking System (RSTS), from which aggregate statistical information is generated to create the dataset. The dataset resides in an Oracle database in the City's environment.

The dataset is created in support of the Vital Statistics Act, which is a Provincial legislation. The dataset also supports the City's operational requirements and business (functions."https://open.toronto.ca/dataset/death-registry-statistics/")



```{r}
#| echo: false
#| warning: false
#| message: false
#### Acquire ####
raw_death_registry <-
  read_csv(
    here::here("inputs/data/Death Registry Statistics Data.csv"),
    show_col_types = FALSE
  )

write_csv(
  x = raw_death_registry,
  file = "raw_death_registry.csv"
)

```



```{r}
#| echo: false
#| warning: false
#### Clean ####
cleaned_death_registry <-
  clean_names(raw_death_registry) |>
  mutate(time_period = ym(time_period)) |>
  filter(
    place_of_death == "Toronto",
    time_period %in% c(sprintf("2023-0%s-01", c(1:9)), "2023-10-01", "2023-11-01", "2023-12-01")
  ) |>
  select(time_period, death_licenses)

```



```{r}
#| echo: false
#| warning: false
#| message: false
#| include: false
#### Test ####
cleaned_death_registry$time_period |>
  unique() == c(sprintf("2023-0%s-01", c(1:9)), "2023-10-01", "2023-11-01", "2023-12-01")
cleaned_death_registry$time_period |> class() == "Date"
cleaned_death_registry$death_licenses |> class() == "numeric"
```



```{r}
#| echo: false
#| warning: false
write_csv(
  x = cleaned_death_registry,
  file = "cleaned_death_registry.csv"
)
```


```{r}
#| echo: false
#| warning: false
#### Explore ####
cleaned_death_registry <-
  read_csv(
    "cleaned_death_registry.csv",
    show_col_types = FALSE
  )
```

\newpage

# Results

To create the table we expect follows this procedure: simulate with a dataset, read the raw data, clean the data, and finally the data was accurately presented and consistent with the sketch we made. The number of deaths in each month is as followed:

January: 1083, February: 485, March: 1012, April: 1677, May: 2008, June: 1928, July: 417, August: 912, September: 1268, October: 1182, November: 1458, December: 611. 

We found that the highest number of deaths was in May and June, with a high of around 2,000, and the lowest months were in February, July and December, with around 500. The death toll in the remaining months was concentrated around 1,000. 

Combined with the ideas introduced at the beginning of the article, this data can be combined with other relevant data to analyze, and perhaps unexpected discoveries can be obtained. This is the direction of future research that can be further explored, and this data can be used as a basis. You can also drill down into other years' data, or trends in total deaths over several years, to create a line chart.

The result of our code are shown by @tbl-deathregistrytable.
```{r}
#| echo: false
#| warning: false
#| label: tbl-deathregistrytable
#| tbl-cap: "Number of death in Toronto for each month in 2023"
cleaned_death_registry |>
  mutate(time_period_month = month(
    time_period,
    label = TRUE,
    abbr = FALSE
  )) |>
  arrange(time_period_month) |>
  drop_na(death_licenses) |>
  summarise(
    death_licenses = sum(death_licenses),
    .by = time_period_month
  ) |>
  kable(
    col.names = c("Month", "Number of death")
  )
```


# Conclusion
Overall, this study successfully plotted the number of deaths registered in Toronto by month in 2023, and achieved the expected results. The highest number of deaths was concentrated in May and June, with a high of around 2,000, and the lowest months were in February, July and December, with a low of around 500. The death toll in the remaining months was concentrated around 1,000. It is believed that data can be used to assist in government management, policy formulation, and improvement of people's livelihood.

\newpage

\appendix

# Appendix {-}

# Additional data details

## Simulation

@tbl-simulatedata

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: tbl-simulatedata
#| tbl-cap: "Dataset Simulation"
# simulate the dataset
#### Simulate ####
set.seed(23)

simulated_death_data <-
  tibble(
    time_period = rep(c(sprintf("2023-0%s", c(1:9)), sprintf("2023-1%s", c(0:2))), times = 3),
    place_of_death = c(rep("Toronto", times = 36)),
    death_number =
      rpois(
        n = 36,
        lambda = 50
      ) # Draw 36 times from the Poisson distribution
  )
head(simulated_death_data) |>
  kable(
    col.names = c("time period", "place_of_death", "death_number"),
    booktabs = TRUE
  )
```


## Read raw data

@tbl-rawdata
```{r}
#| echo: false
#| warning: false
#| message: false
#| label: tbl-rawdata
#| tbl-cap: "Raw Death Registry"
#### Acquire ####

head(raw_death_registry) |>
  kable(
    col.names = c("_id", "CIVIC_CENTRE", "DEATH_LICENSES", "PLACE_OF_DEATH", "TIME_PERIOD"),
    booktabs = TRUE
  )
```

@tbl-cleanedata
## Clean data
```{r}
#| echo: false
#| warning: false
#| label: tbl-cleanedata
#| tbl-cap: "Cleaned Death Registry"
#### Clean ####
head(cleaned_death_registry) |>
  kable(
    col.names = c("time_period", "death_licenses"),
    booktabs = TRUE
  )
```

## Tests

Three tests were wrote down to check whether the cleaned death registry data suits our expectation. Separately test time_period's value, time_period's class and death_licenses's class.
```{r}
#| echo: false
#| warning: false
#| message: false
#| include: false
#### Test ####
cleaned_death_registry$time_period |>
  unique() == c(sprintf("2023-0%s-01", c(1:9)), "2023-10-01", "2023-11-01", "2023-12-01")
cleaned_death_registry$time_period |> class() == "Date"
cleaned_death_registry$death_licenses |> class() == "numeric"
```




\newpage


# References
@citeR
@tellingstories
@citeopendatatoronto
@citetidyverse
@citeR-knitr
@citelubridate
@citejanitor
@citerenv
@citelintr
@citestyler
@Inessa
