---
title: "Toronto Death Registry"
author: Yunzhao Li
thanks: "Code and data are available at: [https://github.com/yunzhaol/Toronto_Death_Registry.git](https://github.com/yunzhaol/Toronto_Death_Registry.git)."
date: 22 January 2024
abstract: "In Toronto, there are many people died each year. The data of death registry supports the City's operational requirements and business functions. In this project we will make a table of number of death in Toronto for each month in 2023. By analyzing this, we can find months with high number of death and make conjectures with factors like weather, poicies or incidents of that particular month."
format: pdf
number-sections: true
toc: true
bibliography: references.bib
---


```{r}
#| echo: false
#| include: true
#| warning: false
#| message: false

#### Workspace set-up ####
library(tidyverse)
library(janitor)
library(opendatatoronto)
library(lubridate)
library(knitr)
library(lintr)
library(renv)
library(styler)
```


# Introduction

You can and should cross-reference sections and sub-sections. 

The remainder of this paper is structured as follows. @sec-data....


# Data

## Simulation
```{r}
#| echo: false
#| warning: false
#| message: false
#| label: tbl-simulatedata
#| tbl-cap: "Dataset Simulation"
#simulate the dataset
#### Simulate ####
set.seed(23)

simulated_death_data <-
  tibble(
    time_period = rep(c(sprintf("2023-0%s", c(1:9)), sprintf("2023-1%s", c(0:2))), times = 3),
    place_of_death = c(rep("Toronto", times = 36)),
    death_number =
      rpois(
        n = 36,
        lambda = 50
      ) # Draw 36 times from the Poisson distribution
  )

head(simulated_death_data)|>
kable(
    col.names = c("time period", "place_of_death", "death_number"),
  booktabs = TRUE
)
```


## Read raw data

## Clean data
```{r}
#| echo: false
#| include: false
#| warning: false
#| message: false
#### Acquire ####
raw_death_registry <-
  read_csv(
    here::here("inputs/data/Death Registry Statistics Data.csv"),
    show_col_types = FALSE
  )

write_csv(
  x = raw_death_registry,
  file = "raw_death_registry.csv"
)

head(raw_death_registry)
```

```{r}
#| echo: false
#| warning: false
#| include: false
#### Clean ####
cleaned_death_registry <-
  clean_names(raw_death_registry) |>
  mutate(time_period = ym(time_period)) |>
  filter(
    place_of_death == "Toronto",
    time_period %in% c(sprintf("2023-0%s-01", c(1:9)), "2023-10-01", "2023-11-01", "2023-12-01")
  ) |>
  select(time_period, death_licenses)

head(cleaned_death_registry)
```
```{r}
#| echo: false
#| warning: false
#| message: false
#| include: false
#### Test ####
cleaned_death_registry$time_period |>
  unique() == c(sprintf("2023-0%s-01", c(1:9)), "2023-10-01", "2023-11-01", "2023-12-01")
cleaned_death_registry$time_period |> class() == "Date"
cleaned_death_registry$death_licenses |> class() == "numeric"

```



```{r}
#| echo: false
#| warning: false
write_csv(
  x = cleaned_death_registry,
  file = "cleaned_death_registry.csv"
)
```


```{r}
#| echo: false
#| warning: false
#### Explore ####
cleaned_death_registry <-
  read_csv(
    "cleaned_death_registry.csv",
    show_col_types = FALSE
  )
```

\newpage

# Results

The output of that code is @tbl-deathregistrytable
```{r}
#| echo: false
#| warning: false
#| label: tbl-deathregistrytable
#| tbl-cap: "Number of death in Toronto for each month in 2023"
cleaned_death_registry |>
  mutate(time_period_month = month(
    time_period,
    label = TRUE,
    abbr = FALSE
  )) |>
  arrange(time_period_month) |>
  drop_na(death_licenses) |>
  summarise(
    death_licenses = sum(death_licenses),
    .by = time_period_month
  ) |>
  kable(
    col.names = c("Month", "Number of death")
  )
```



# Conclusion




\newpage


# References
@citeR
@tellingstories
@citeopendatatoronto
@citetidyverse
@citeR-knitr
@citelubridate
@citejanitor
@citerenv
@citelintr
@citestyler
@Inessa